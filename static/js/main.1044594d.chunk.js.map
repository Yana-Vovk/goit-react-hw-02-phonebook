{"version":3,"sources":["components/ContactForm.js","components/Filter.js","components/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","title","required","onChange","Component","Filter","filter","ContactList","contacts","onDeleteContact","map","contact","onClick","id","App","addContact","find","alert","item","shortid","generate","nameSearch","lowerFilter","toLowerCase","includes","filterChange","deleteContact","contactId","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1044594d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n    \r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n    \r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    \r\n    render() {\r\n         const { name, number } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>Name<br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label><br />\r\n                <label>Number<br />\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label> <br />\r\n                <button type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;","const Filter = ({ filter, handleChange }) => {\r\n    return (\r\n        <label>Find contacts by name <br />\r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={handleChange} />\r\n        </label>\r\n    );\r\n}\r\n    \r\nexport default Filter;","const ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul>\r\n            {contacts.map(contact => (\r\n                <li key={contact.id}>\r\n                    {contact.name}\r\n                    <span>: </span>\r\n                    {contact.number}\r\n                     <span> </span>\r\n                    <button type=\"button\" onClick={() => onDeleteContact(contact.id)}>Delete</button>\r\n                </li>))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ContactList;","import './App.css';\nimport React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n    filter: '',\n  }\n\n  addContact = ({ name, number }) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      alert(`${name} already in contacts`);\n      return;\n    }\n\n    const item = { id: shortid.generate(), name: name, number:number };\n    this.setState((state) => ({\n      contacts: [item, ...state.contacts]\n    }))\n  }\n\n  nameSearch = () => {\n    const { filter, contacts } = this.state;\n    const lowerFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(lowerFilter)\n    );\n  }\n\n   filterChange = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    }\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const contacts = this.nameSearch();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onSubmit={this.addContact}\n        />\n        <h2>Contacts</h2>\n        <Filter\n          filter={filter}\n          handleChange={this.filterChange}/>\n        <ContactList\n          contacts={contacts}\n          onDeleteContact={this.deleteContact}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}